@using EventPlanner.DTO.Vote
@model VoteViewModel

@{
    ViewBag.Title = "Vote";
}

<h2>Vote for @Model.EventName</h2>


<div class="row" style="padding-bottom: 20px">
    <div class="col-xs-12" id="mapContainer" style="height: 300px;">
        
    </div>
</div>

<div class="row" style="padding-bottom: 20px">
    <div class="col-sm-12">
        <form class="form-inline" asp-controller="Vote" asp-action="ChangeName" asp-route-id="@Model.EventId" method="post">
            <input type="hidden" name="voteSessionId" value="@Model.VoteSession.VoteSessionId" />
            <div class="form-group">
                <label for="name">Your name:</label>
                <input type="text" class="form-control" id="name" name="name" value="@Model.VoteSession.VoterName" placeholder="Type your name">
            </div>
            <button type="submit" class="btn btn-default">Change</button>
        </form>
    </div>
</div>

<div class="row">
    @foreach (var item in Model.Places)
    {
        <div class="col-xs-6 col-sm-4 col-md-3">
            <img src="@item.PlacePhotoUrl" class="img-rounded">
            <div class="caption">
                <h3>@item.Place.Name</h3>
                @foreach (var timeItem in item.Place.Times)
                {
                    var vote = @Model.VoteSession.Votes.First(v => v.TimeAtPlaceId == timeItem.Id);
                    <form asp-controller="Vote" asp-action="Vote" asp-route-id="@Model.EventId" method="post">
                        <input type="hidden" name="voteSessionId" value="@Model.VoteSession.VoteSessionId"/>
                        <input type="hidden" name="timeAtPlaceId" value="@vote.TimeAtPlaceId"/>
                        <input type="hidden" name="value" value="@(vote.Value == VoteValueEnum.Accept ? VoteValueEnum.Decline : VoteValueEnum.Accept)"/>
                        <div class="checkbox">
                            <label>
                                <input type="checkbox"
                                       checked="@(vote.Value == VoteValueEnum.Accept)"
                                       onclick="this.form.submit();">
                                @timeItem.Time
                            </label>
                        </div>
                    </form>
                }
            </div>
        </div>
    }
</div>
<hr />
<div class="row">
    <div class="col-xs-12">
        <a asp-controller="Event" asp-action="Results" asp-route-id="@Model.EventId">Show results</a>
    </div>
</div>

@section scripts
{
    <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false&key=AIzaSyCqWB-0ha09wN6lefiRkvvbP4eoFAOpVaM"></script>
    <environment names="Development">
        <script type="text/javascript" src="~/lib/gmaps/gmaps.js"></script>
    </environment>
    <environment names="Staging,Production">
        <script type="text/javascript" src="~/lib/gmaps/gmaps.min.js"></script>
    </environment>
    <script>
        (function() {
            @{
                var places = Model.Places
                    .Where(p => p.Location != null)
                    .Select(p => new
                    {
                        name = p.Place.Name,
                        lat = p.Location.Lat,
                        lng = p.Location.Lng,
                        info = p.Place.Times.Aggregate($"<p><strong>{p.Place.Name}</strong><p>", (s, t) => s + $"<p>{t.Time}<p>")
                    });

                @Html.Raw($"var places = {Newtonsoft.Json.JsonConvert.SerializeObject(places)};")
            };

            var lat = places[0] ? places[0].lat : 49.191326;
            var lng = places[0] ? places[0].lng : 16.611281;

            var map = new GMaps({
                el: '#mapContainer',
                lat: lat,
                lng: lng,
                zoomControl: true,
                zoomControlOpt: {
                    style: 'SMALL',
                    position: 'TOP_LEFT'
                },
                maxZoom: 17,
                panControl: false,
                streetViewControl: false,
                mapTypeControl: false,
                overviewMapControl: false
            });

            var bounds = new google.maps.LatLngBounds();

            for (var i = 0; i < places.length; i++) {
                var place = places[i];
                var marker = map.addMarker({
                    lat: place.lat,
                    lng: place.lng,
                    title: place.name,
                    infoWindow: {
                        content: place.info
                    }
                });

                bounds.extend(marker.position);
            }

            map.fitBounds(bounds);
        })();
    </script>
}
